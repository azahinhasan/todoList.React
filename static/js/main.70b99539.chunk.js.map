{"version":3,"sources":["button.css","App.css","components/todoInput.css","components/showToDolist.css","components/todoInput.js","components/showToDolist.js","firebase_config.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","todoInput","type","className","classes","input","value","this","props","state","onClick","hideValueOfInput","onKeyDown","event","key","add","onChange","todoInputUpdate","classesBtn","addBtn","line","Component","todoList","prevProps","prevState","todos","noTask","length","map","todo","inprogress","dataNotDone","dataDone","button","update","bind","id","divider","delete","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","App","updateCounter","updatePage","getTodoCallAgain","darkMood","addTodo","e","collection","timestmp","FieldValue","serverTimestamp","setState","getTodo","orderBy","get","then","snapshot","list","forEach","doc","data","a","push","catch","error","console","log","forceUpdate","deleteTodo","target","updateTodo","pageData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70b99539.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button__button__3UoNd\",\"buttonClickHere\":\"button__buttonClickHere__3rAGq\",\"addBtn\":\"button__addBtn__2BUNW\",\"changeMoodBtn\":\"button__changeMoodBtn__3FgYo\",\"divider\":\"button__divider__20PMQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__2vBGD\",\"chngeMoodDark\":\"App__chngeMoodDark__1xhFZ\",\"chngeMoodLight\":\"App__chngeMoodLight__34flI\",\"noPrint\":\"App__noPrint__29U3i\",\"table\":\"App__table__15fDY\",\"PSnote\":\"App__PSnote__3xD7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"todoInput__input__3VuvV\",\"line\":\"todoInput__line__119ay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataNotDone\":\"showToDolist__dataNotDone__3xMeM\",\"dataDone\":\"showToDolist__dataDone__2qvGa\"};","import React, { Component } from 'react';\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { useState, useEffect} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport classesBtn from '../button.css';\r\nimport classes from './todoInput.css';\r\n\r\nclass todoInput extends Component{\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <input type=\"text\"\r\n                className={classes.input}\r\n                \r\n                value={this.props.state.todoInput}\r\n                onClick={this.props.hideValueOfInput}\r\n                onKeyDown={(event)=> event.key == \"Enter\" ? this.props.add() : null}\r\n                //onKeyPress={this.props.add}\r\n                onChange={this.props.todoInputUpdate}\r\n                />\r\n\r\n                <br/>\r\n                <button className={classesBtn.addBtn} onClick={this.props.add}>+</button>\r\n            \r\n            <div className={classes.line}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default todoInput;","import React, { Component } from 'react';\r\n\r\nimport firebase from \"firebase/app\";\r\nimport { useState, useEffect} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport classes from './showToDolist.css';\r\nimport classesBtn from '../button.css';\r\n\r\nclass todoList extends Component{\r\n\r\n    \r\n    componentDidUpdate(prevProps,prevState){\r\n        if(this.props.todos !== prevProps.todos){\r\n          return true;\r\n        }\r\n        return false\r\n      }\r\n    \r\n    render(){\r\n        let noTask= '';\r\n        if (this.props.todos.length == 0) \r\n        {\r\n            noTask = <h2>No Task Left!</h2>\r\n        }\r\n        return(\r\n\r\n            <div>\r\n\r\n            {noTask}\r\n            <table>\r\n                <tbody>\r\n                    {this.props.todos.map(todo =>{\r\n                        return(\r\n                        <tr key={todo.id}>\r\n                            <td className={todo.inprogress? classes.dataNotDone : classes.dataDone}>\r\n                                {/*console.log(\"Pro \" +String(todo.inprogress))*/}\r\n                                \r\n                                {todo.todo} \r\n                            </td>\r\n\r\n                            <td>\r\n                                <button className={classesBtn.button} onClick={this.props.update.bind(this,todo.id,todo.inprogress)}>✔</button>\r\n                                <div className={classesBtn.divider}></div>\r\n                                <button className={classesBtn.button} onClick={this.props.delete.bind(this,todo.id)}>✖</button>\r\n                            </td>\r\n                        </tr>\r\n                        )})}\r\n                </tbody>\r\n            </table> \r\n            </div>\r\n        )\r\n    \r\n}\r\n}\r\n\r\nexport default todoList;","\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// var firebaseConfig = {\r\n//     apiKey: \"AIzaSyA6Ok2eqATjs2yPi_MK6ET93Cpp1AoECoA\",\r\n//     authDomain: \"todolist-f5d0f.firebaseapp.com\",\r\n//     databaseURL: \"https://todolist-f5d0f-default-rtdb.firebaseio.com\",\r\n//     projectId: \"todolist-f5d0f\",\r\n//     storageBucket: \"todolist-f5d0f.appspot.com\",\r\n//     messagingSenderId: \"96480343942\",\r\n//     appId: \"1:96480343942:web:a585f34ef10a0455c89e07\",\r\n//     measurementId: \"G-1QQ94EK0EL\"\r\n// };\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAvqfm2zNHYHKAN75c_FwjViuJhe6HneaI\",\r\n    authDomain: \"todolist-4d2db.firebaseapp.com\",\r\n    projectId: \"todolist-4d2db\",\r\n    storageBucket: \"todolist-4d2db.appspot.com\",\r\n    messagingSenderId: \"611839853346\",\r\n    appId: \"1:611839853346:web:cfdf7461552546a6129b7b\",\r\n    measurementId: \"G-S32YXE5E9Z\"\r\n  };\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport { db };","import React, { Component } from 'react';\r\n\r\nimport firebase from \"firebase/app\";\r\nimport './App.css';\r\nimport { useState, useEffect} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport TodoInput from './components/todoInput';\r\nimport TodoList from './components/showToDolist';\r\nimport Button from '@material-ui/core/Button';\r\nimport { db} from './firebase_config';\r\nimport Aux from './hoc/auxx';\r\nimport classes from './App.css';\r\n\r\nlet a = false;\r\nclass App extends Component {\r\n\r\n  state={\r\n    updateCounter:0,\r\n    updatePage:false,\r\n    todoInput:'Enter Your ToDo',\r\n    getTodoCallAgain:false,\r\n    // tode:{\r\n    //   id:'',\r\n    todos:[],\r\n    darkMood:false,\r\n    //   inprogress:''\r\n    // },\r\n    // todos:[ {id: \"fafdafa\",todo:\"hello\",inprogress: true},\r\n    // {id: \"fafdfa\",todo:\"fuck you.you are totally shit hofie hofaie hafoe l\",inprogress: true}]\r\n  }\r\n\r\n  \r\n  componentDidMount(){\r\n   //console.log(\"[App.js] componentDidMount\");\r\n    this.getTodo();\r\n  }\r\n  componentDidUpdate(){\r\n    if(this.state.updatePage){\r\n      //console.log(\"[App.js] componentDidUpdate\");\r\n      this.getTodo();\r\n      this.setState({updatePage : false});\r\n    }\r\n  }\r\n\r\n\r\n\r\n  addTodo =(e) => {\r\n    //console.log(\"added\");\r\n    //e.preventDefault();\r\n\r\n    if(this.state.todoInput!='Enter Your ToDo'){\r\n      db.collection(\"todoList\").add({\r\n        inprogress: true,\r\n        timestmp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        todo:this.state.todoInput\r\n      });\r\n     this.setState({todoInput : 'Enter Your ToDo' , updatePage : true});\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  getTodo= () =>{\r\n    db.collection(\"todoList\").orderBy(\"timestmp\" ,\"desc\").get().then(snapshot => {\r\n      const list =[];\r\n      snapshot.forEach(doc => {\r\n        const data = {\r\n          id: doc.id,\r\n          todo: doc.data().todo,\r\n          inprogress: doc.data().inprogress\r\n        }\r\n        let a = {...data};\r\n        list.push(a);\r\n      })\r\n    this.setState({todos : list})\r\n\r\n    if(this.state.getTodoCallAgain){\r\n      this.setState({getTodoCallAgain : false})\r\n      this.getTodo();    \r\n    }\r\n\r\n    })\r\n    .catch( error => console.log(error))\r\n    this.forceUpdate();\r\n  }\r\n  \r\n\r\n  deleteTodo =(id) => {\r\n\r\n    db.collection(\"todoList\").doc(id).delete();\r\n    this.setState({updatePage : true ,updateCounter:this.state.updateCounter+1,getTodoCallAgain:true});\r\n    //this.forceUpdate();\r\n   // setTimeout(() => { window.location.reload(false); }, 400);\r\n    \r\n    \r\n  } \r\n\r\n\r\n\r\n  todoInputUpdate=(event)=>{\r\n    this.setState({todoInput:event.target.value})\r\n  }\r\n\r\n  hideValueOfInput=()=>{\r\n    if(this.state.todoInput== \"Enter Your ToDo\"){\r\n      this.setState({todoInput:\"\"})\r\n    }\r\n  }\r\n\r\n\r\n\r\n  updateTodo=(id,inprogress)=>{\r\n    db.collection(\"todoList\").doc(id).update({inprogress: !inprogress});\r\n    this.setState({updatePage : true ,updateCounter: this.state.updateCounter+1});\r\n    this.forceUpdate();\r\n    //setTimeout(() => {  window.location.reload(false); }, 800); \r\n  }\r\n\r\n\r\n  render(){\r\n    \r\n    let pageData = null;\r\n\r\n    if(this.state.todos){\r\n      \r\n      pageData = (\r\n        <div>\r\n          <h1>ToDo List</h1>\r\n          <TodoInput\r\n          key={4}\r\n          add={this.addTodo}\r\n          state={this.state}\r\n          hideValueOfInput={this.hideValueOfInput}\r\n          todoInputUpdate={this.todoInputUpdate}\r\n          />\r\n          <TodoList\r\n          key={1}\r\n          todos={this.state.todos}\r\n          delete={this.deleteTodo}\r\n          update={this.updateTodo}\r\n          /> \r\n         \r\n          {/* <button onClick={this.getTodo}>hhh</button> */}\r\n        </div>\r\n      );\r\n    }\r\n    return(\r\n\r\n      <div className={classes.App}>\r\n        {pageData}\r\n        <p>Remove and Done All</p>\r\n      </div>\r\n    \r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    \r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n//npm run deploy\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}